import { Button, VerticalBox, LineEdit, HorizontalBox, StandardButton, ComboBox, Palette } from "std-widgets.slint";
import { ConfirmDialog } from "confirmdialog.slint";
import { MessageBox } from "messagebox.slint";

export component SettingsWindow inherits Dialog {
    title: title_text;

    in-out property <string> title_text;
    in-out property <bool> is_admin;
    in-out property <[string]> users;
    in-out property <string> selected_user;
    in-out property <string> client_application;
    in-out property <string> app_password;
    in-out property <string> user_info;
    callback user_selected(string);
    callback search_clicked();
    callback request_save_close();
    callback request_cancel_close();

    in-out property <string> dialog_text;
    callback show_confirm_popup;

    show_confirm_popup => { confirm_popup.visible = true; }

    confirm_popup := ConfirmDialog {
        dialog_text <=> root.dialog_text;
        popup_confirmed => { root.request_cancel_close(); }
    }

    callback show_message_box;

    show_message_box => { confirm_message_box.show(); }

    confirm_message_box := MessageBox {
        dialog_text <=> root.dialog_text;
    }

    VerticalBox {
        Text {
            text: "Kiosk user";
            visible <=> is_admin;
        }
        ComboBox {
            model: users;
            visible <=> is_admin;
            selected => {root.user_selected(self.current-value);}
            current-value <=> selected_user;
        }
        Text {
            text <=> user_info;
            visible <=> is_admin;
        }
        Text {
            text: "Client application";
        }
        HorizontalBox {
            LineEdit {
                text <=> client_application;
                width: 300px;
            }
            Button {
                text: "...";
                clicked => {root.search_clicked();}
            }
        }

        HorizontalBox {
            Text {
                text: "Password: ";
            }
            LineEdit {
                text <=> app_password;
                input-type: password;
            }
        }

        Text {}

        HorizontalBox {
            StandardButton
            {
                kind: ok;
                clicked => {root.request_save_close();}
            }
            StandardButton
            {
                kind: cancel;
                clicked => {root.request_cancel_close();}
            }
        }
    }
}